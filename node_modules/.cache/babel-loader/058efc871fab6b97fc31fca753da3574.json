{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\plann\\\\Desktop\\\\01-starting-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [enteredEmail, setEnteredEmail] = useState(''); //email почта жазылат\n\n  const [emailIsValid, setEmailIsValid] = useState(); //email туурабы жокпу текшеоет\n\n  const [enteredPassword, setEnteredPassword] = useState(''); //password жазылат\n\n  const [passwordIsValid, setPasswordIsValid] = useState(); // password тууралыгын текшерет\n\n  const [formIsValid, setFormIsValid] = useState(false); // email менен password туура болсо форма туурабы текшерет\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      console.log('changed');\n    }, 500);\n    setFormIsValid(enteredEmail.includes('@') && enteredPassword.trim().length > 6); //бул жерде почтада @ болушу керек жана пароль 6 дан жогору болуш керек\n  }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = event => {\n    //input ка жазылат жана event тен келген данныйды алып берет \n    setEnteredEmail(event.target.value); // ал event setEneteredEmail га барып сакталат \n    // setFormIsValid(\n    //   event.target.value.includes('@') && enteredPassword.trim().length > 6 //бул жерде почтада @ болушу керек жана пароль 6 дан жогору болуш керек\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value); // setFormIsValid(\n    //   event.target.value.trim().length > 6 && enteredEmail.includes('@')\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes('@'));\n  }; // почта менен паролдун тууралыгын бул эки функция текшерип жатат жана бул эки функция onBlur фокус болгондо иштейт\n  //эгер пустой кылсак кызыл болуп калат эгер туура толтурсак border кызыл болбой калат\n\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  }; // submit кылганда props ичине келген onlogin ди чакырабыз loginHandler функциясын иштетбиз, \n  //submitHandler функциясынын ичинде чакырылган onLogin озуно параметрлерди алат(жазган email м-н password алат) \n  //жана ал App.js теги loginHandler функциясындагы email, password ко келет\n  //эки параметрди состояниедан алабыз туура толтурулса гана иштейт, антпесе кнопко иштебейт\n\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: enteredEmail,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"LXbrkIlmixekYK8sfxwnk7twvaE=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Card","classes","Button","Login","props","enteredEmail","setEnteredEmail","emailIsValid","setEmailIsValid","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","timer","setTimeout","console","log","includes","trim","length","emailChangeHandler","event","target","value","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"sources":["C:/Users/plann/Desktop/01-starting-project/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst Login = (props) => {\n  const [enteredEmail, setEnteredEmail] = useState('');//email почта жазылат\n  const [emailIsValid, setEmailIsValid] = useState();//email туурабы жокпу текшеоет\n  const [enteredPassword, setEnteredPassword] = useState('');//password жазылат\n  const [passwordIsValid, setPasswordIsValid] = useState();// password тууралыгын текшерет\n  const [formIsValid, setFormIsValid] = useState(false);// email менен password туура болсо форма туурабы текшерет\n\n  useEffect(() =>{\n    const timer = setTimeout(() => {\n      console.log('changed');\n    }, 500)\n    setFormIsValid(enteredEmail.includes('@') && enteredPassword.trim().length > 6) //бул жерде почтада @ болушу керек жана пароль 6 дан жогору болуш керек\n   \n  }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = (event) => { //input ка жазылат жана event тен келген данныйды алып берет \n    setEnteredEmail(event.target.value); // ал event setEneteredEmail га барып сакталат \n\n    // setFormIsValid(\n    //   event.target.value.includes('@') && enteredPassword.trim().length > 6 //бул жерде почтада @ болушу керек жана пароль 6 дан жогору болуш керек\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n\n    // setFormIsValid(\n    //   event.target.value.trim().length > 6 && enteredEmail.includes('@')\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes('@'));\n  }; \n// почта менен паролдун тууралыгын бул эки функция текшерип жатат жана бул эки функция onBlur фокус болгондо иштейт\n//эгер пустой кылсак кызыл болуп калат эгер туура толтурсак border кызыл болбой калат\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };// submit кылганда props ичине келген onlogin ди чакырабыз loginHandler функциясын иштетбиз, \n  //submitHandler функциясынын ичинде чакырылган onLogin озуно параметрлерди алат(жазган email м-н password алат) \n  //жана ал App.js теги loginHandler функциясындагы email, password ко келет\n  //эки параметрди состояниедан алабыз туура толтурулса гана иштейт, антпесе кнопко иштебейт\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={enteredEmail}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}> \n            Login\n          </Button> \n          {/* Эгерде форма туура толтурулса жарактуу болсо анда кнопканы басууга болот антпесе иштебейт */}\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}